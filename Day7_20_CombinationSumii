#include<bits/stdc++.h>
void helper(int idx,vector<int> arr,vector<int> &subset,set<vector<int>> &sres,int &sum, int target)
{
    if(idx==arr.size())
    {
        if(sum==target)
        {
            vector<int> t=subset;
            sort(t.begin(),t.end());
            sres.insert(t);
        }
        return;
    }
    //dont pick idx
    helper(idx+1,arr,subset,sres,sum,target);
    //pick idx
    subset.push_back(arr[idx]);
    sum+=arr[idx];
     helper(idx+1,arr,subset,sres,sum,target);
    subset.pop_back();
    sum-=arr[idx];
}
vector<vector<int>> combinationSum2(vector<int> &arr, int n, int target)
{
    // Write your code here.
    vector<int> subset;
    int sum=0;
    vector<vector<int>> res;
    set<vector<int>> sres;
    helper(0,arr,subset,sres,sum,target);
    for(auto x:sres)
        res.push_back(x);
//     sort(res.begin(),res.end());
    return res;
}
